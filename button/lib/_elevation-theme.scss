//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

@use 'sass:map';
@use 'sass:meta';

@use '../../elevation/lib/elevation-theme';

@mixin theme-styles($theme) {
  & {
    @include elevation-theme.theme-styles(
      (
        shadow: map.get($theme, container-elevation-shadow),
        overlay-opacity: map.get($theme, container-elevation-overlay-opacity),
      )
    );
  }

  &:hover {
    @include elevation-theme.theme-styles(
      (
        shadow: map.get($theme, hover-container-elevation-shadow),
        overlay-opacity:
          map.get($theme, hover-container-elevation-overlay-opacity),
      )
    );
  }

  &:focus {
    @include elevation-theme.theme-styles(
      (
        shadow: map.get($theme, focus-container-elevation-shadow),
        overlay-opacity:
          map.get($theme, focus-container-elevation-overlay-opacity),
      )
    );
  }

  &:active {
    @include elevation-theme.theme-styles(
      (
        shadow: map.get($theme, pressed-container-elevation-shadow),
        overlay-opacity:
          map.get($theme, pressed-container-elevation-overlay-opacity),
      )
    );
  }

  &:disabled {
    @include elevation-theme.theme-styles(
      (
        shadow: map.get($theme, disabled-container-elevation-shadow),
        overlay-opacity:
          map.get($theme, disabled-container-elevation-overlay-opacity),
      )
    );
  }

  @include elevation-theme.theme-styles(
    (
      surface-tint-layer-color:
        map.get($theme, container-surface-tint-layer-color),
    )
  );
}

@function resolve-theme($theme, $resolvers) {
  @return elevation-theme.resolve-theme(
    $theme,
    map.get($resolvers, elevation),
    $shadow-color-token: container-shadow-color,
    $elevation-tokens: (
      container-elevation,
      disabled-container-elevation,
      focus-container-elevation,
      hover-container-elevation,
      pressed-container-elevation
    )
  );
}
