//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// stylelint-disable selector-class-pattern --
// Selector '.md3-*' should only be used in this project.

@use 'sass:map';
@use 'sass:meta';

@use '../../elevation/lib/elevation-theme';
@use '../../ripple/ripple-theme';
@use '../../sass/elevation';
@use '../../sass/resolvers';
@use '../../sass/theme';

@function resolve-theme($theme, $resolvers) {
  $theme: elevation-theme.resolve-theme(
    $theme,
    map.get($resolvers, elevation),
    $shadow-color-token: container-shadow-color,
    $elevation-tokens: (
      container-elevation,
      focus-container-elevation,
      hover-container-elevation,
      pressed-container-elevation,
      lowered-container-elevation,
      lowered-focus-container-elevation,
      lowered-hover-container-elevation,
      lowered-pressed-container-elevation
    )
  );

  @return $theme;
}

@mixin theme-styles() {
  &,
  .md3-fab__ripple {
    border-radius: var(--_container-shape);
  }

  &:enabled {
    background-color: var(--_container-color);

    ::slotted(*),
    .md3-fab__icon {
      color: var(--_icon-color);
    }

    @include elevation-theme.theme-styles(
      (
        shadow: var(--_container-elevation-shadow),
        overlay-opacity: var(--_container-elevation-overlay-opacity),
      )
    );

    &.md3-fab--lowered {
      @include elevation-theme.theme-styles(
        (
          shadow: var(--_lowered-container-elevation-shadow),
          overlay-opacity: var(--_lowered-container-elevation-overlay-opacity),
        )
      );
    }
  }

  &:hover {
    ::slotted(*),
    .md3-fab__icon {
      color: var(--_hover-icon-color);
    }

    @include elevation-theme.theme-styles(
      (
        shadow: var(--_hover-container-elevation-shadow),
        overlay-opacity: var(--_hover-container-elevation-overlay-opacity),
      )
    );

    &.md3-fab--lowered {
      @include elevation-theme.theme-styles(
        (
          shadow: var(--_lowered-hover-container-elevation-shadow),
          overlay-opacity:
            var(--_lowered-hover-container-elevation-overlay-opacity),
        )
      );
    }
  }

  &:focus {
    ::slotted(*),
    .md3-fab__icon {
      color: var(--_focus-icon-color);
    }

    @include elevation-theme.theme-styles(
      (
        shadow: var(--_focus-container-elevation-shadow),
        overlay-opacity: var(--_focus-container-elevation-overlay-opacity),
      )
    );

    &.md3-fab--lowered {
      @include elevation-theme.theme-styles(
        (
          shadow: var(--_lowered-focus-container-elevation-shadow),
          overlay-opacity:
            var(--_lowered-focus-container-elevation-overlay-opacity),
        )
      );
    }
  }

  &:active {
    ::slotted(*),
    .md3-fab__icon {
      color: var(--_pressed-icon-color);
    }

    @include elevation-theme.theme-styles(
      (
        shadow: var(--_pressed-container-elevation-shadow),
        overlay-opacity: var(--_pressed-container-elevation-overlay-opacity),
      )
    );

    &.md3-fab--lowered {
      @include elevation-theme.theme-styles(
        (
          shadow: var(--_lowered-pressed-container-elevation-shadow),
          overlay-opacity:
            var(--_lowered-pressed-container-elevation-overlay-opacity),
        )
      );
    }
  }

  @include elevation-theme.theme-styles(
    (
      surface-tint-layer-color: var(--_container-surface-tint-layer-color),
    )
  );

  ::slotted(*),
  .md3-fab__icon,
  i,
  svg,
  img {
    font-size: var(--_icon-size);
    height: var(--_icon-size);
    width: var(--_icon-size);
  }

  @include ripple-theme.theme(
    (
      hover-state-layer-color: var(--_hover-state-layer-color),
      focus-state-layer-color: var(--_focus-state-layer-color),
      pressed-state-layer-color: var(--_pressed-state-layer-color),
      hover-state-layer-opacity: var(--_hover-state-layer-opacity),
      focus-state-layer-opacity: var(--_focus-state-layer-opacity),
      pressed-state-layer-opacity: var(--_pressed-state-layer-opacity),
    )
  );
}
