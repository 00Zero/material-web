//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// stylelint-disable selector-class-pattern --
// Selector '.md3-*' should only be used in this project.

@use 'sass:map';
@use '../../ripple/ripple-theme';
@use '../../sass/resolvers';
@use '../../sass/color';
@use '../../sass/theme';
@use '../../tokens';
@use './icon-button-theme';

$_custom-property-prefix: 'outlined-icon-button';

// TODO(b/233323674): Remove when missing tokens have been added.
$_missing-light-theme-tokens: (
  disabled-selected-container-color:
    map.get(tokens.md-sys-color-values-light-dynamic(), on-surface),
  disabled-selected-container-opacity: 0.12,
);
// TODO(b/233323674): Remove when missing tokens have been added.
$_missing-dark-theme-tokens: (
  disabled-selected-container-color:
    map.get(tokens.md-sys-color-values-dark-dynamic(), on-surface),
  disabled-selected-container-opacity: 0.12,
);
$light-theme: map.merge(
  tokens.md-comp-outlined-icon-button-values(),
  $_missing-light-theme-tokens
);
$dark-theme: map.merge(
  tokens.md-comp-outlined-icon-button-values(
    (
      md-sys-color: tokens.md-sys-color-values-dark-dynamic(),
    ),
    $exclude-hardcoded-values: true
  ),
  $_missing-dark-theme-tokens
);

@mixin theme($theme) {
  $theme: theme.validate-theme($light-theme, $theme);
  $theme: icon-button-theme.flatten-disabled-colors(
    $theme,
    $variant: 'outlined'
  );
  $theme: theme.create-theme-vars($theme, $_custom-property-prefix);

  @include theme.emit-theme-vars($theme);
}

@mixin theme-styles($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme-styles($light-theme, $theme);
  $theme: icon-button-theme.flatten-disabled-colors(
    $theme,
    $variant: 'outlined'
  );
  $theme: theme.create-theme-vars($theme, $_custom-property-prefix);

  & {
    @each $token, $value in $theme {
      --_#{$token}: #{$value};
    }
  }

  color: var(--_unselected-icon-color);

  @include ripple-theme.theme(
    (
      focus-state-layer-color: var(--_unselected-focus-state-layer-color),
      focus-state-layer-opacity: var(--_focus-state-layer-opacity),
      hover-state-layer-color: var(--_unselected-hover-state-layer-color),
      hover-state-layer-opacity: var(--_over-state-layer-opacity),
      pressed-state-layer-color: var(--_unselected-pressed-state-layer-color),
      pressed-state-layer-opacity: var(--_pressed-state-layer-opacity),
    )
  );

  &::before {
    border-color: var(--_unselected-outline-color);
    border-width: var(--_unselected-outline-width);
  }

  &:hover {
    color: var(--_unselected-hover-icon-color);
  }

  &:focus {
    color: var(--_unselected-focus-icon-color);
  }

  &:active {
    color: var(--_unselected-pressed-icon-color);
  }

  &:disabled {
    color: var(--_disabled-icon-color);

    &::before {
      border-color: var(--_disabled-outline-color);
    }
  }

  // Selected icon button toggle.
  &.md3-icon-button--on {
    &:not(:disabled) {
      background-color: var(--_selected-container-color);
      color: var(--_selected-icon-color);

      &:hover {
        color: var(--_selected-hover-icon-color);
      }

      &:focus {
        color: var(--_selected-focus-icon-color);
      }

      &:active {
        color: var(--_selected-pressed-icon-color);
      }
    }

    &:disabled {
      background-color: var(--_disabled-selected-container-color);
    }

    @include ripple-theme.theme(
      (
        focus-state-layer-color: var(--_selected-focus-state-layer-color),
        focus-state-layer-opacity: var(--_focus-state-layer-opacity),
        hover-state-layer-color: var(--_selected-hover-state-layer-color),
        hover-state-layer-opacity: var(--_hover-state-layer-opacity),
        pressed-state-layer-color: var(--_selected-pressed-state-layer-color),
        pressed-state-layer-opacity: var(--_pressed-state-layer-opacity),
      )
    );
  }

  @media (forced-colors: active) {
    // Selected button in HCM has an outline.
    &.md3-icon-button--on {
      &::before {
        border-color: var(--_unselected-outline-color);
        border-width: var(--_unselected-outline-width);
      }

      &:disabled::before {
        border-color: var(--_disabled-outline-color);
      }
    }
  }
}
