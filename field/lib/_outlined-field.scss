//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// stylelint-disable selector-class-pattern --
// Selector '.md3-*' should only be used in this project.

@use 'sass:map';
@use '../../motion/animation';

$_animation-duration: 150ms;

@mixin static-styles() {
  .md3-field__outline {
    display: flex;
    // Allow events to target elements underneath the outline, such as icons.
    pointer-events: none;
    height: 100%;
    position: absolute;
    width: 100%;
  }

  .md3-field__outline-start,
  .md3-field__outline-panel-inactive,
  .md3-field__outline-panel-active,
  .md3-field__outline-end {
    // ::before is inactive border, ::after is active border. Borders are
    // absolutely positioned within their elements.
    &::before,
    &::after {
      border: inherit;
      content: '';
      inset: 0;
      position: absolute;
    }
  }

  .md3-field__outline-start,
  .md3-field__outline-end {
    border: inherit;
    border-radius: inherit;
    box-sizing: border-box;
    position: relative;

    &::before,
    &::after {
      border-bottom-style: solid;
      border-top-style: solid;
    }

    &::after {
      opacity: 0;
      transition: animation.standard(opacity, $_animation-duration);
    }

    .md3-field--focused & {
      &::after {
        opacity: 1;
      }
    }
  }

  .md3-field__outline-start {
    &::before,
    &::after {
      border-inline-start-style: solid;
      border-inline-end-style: none;
      border-start-start-radius: inherit;
      border-start-end-radius: 0;
      border-end-start-radius: inherit;
      border-end-end-radius: 0;
    }
  }

  .md3-field__outline-end {
    flex-grow: 1;

    &::before,
    &::after {
      border-inline-start-style: none;
      border-inline-end-style: solid;
      border-start-start-radius: 0;
      border-start-end-radius: inherit;
      border-end-start-radius: 0;
      border-end-end-radius: inherit;
    }
  }

  .md3-field__outline-notch {
    align-items: flex-start;
    border: inherit;
    display: flex;
    position: relative;

    .md3-field--no-label & {
      display: none;
    }
  }

  .md3-field__outline-panel-inactive,
  .md3-field__outline-panel-active {
    border: inherit;
    border-bottom-style: solid;
    inset: 0;
    position: absolute;

    &::before,
    &::after {
      border-top-style: solid;
      border-bottom: none;
      bottom: auto;
      transform: scaleX(1);
      transition: animation.standard(transform, $_animation-duration);
    }

    // Note: no need to do any RTL flipping here. If RTLCSS flips this, it's also
    // ok, we just need one to be left and one to be right.
    &::before {
      right: 50%;
      transform-origin: top left;
    }

    &::after {
      left: 50%;
      transform-origin: top right;
    }

    .md3-field--populated &,
    .md3-field--focused & {
      &::before,
      &::after {
        transform: scaleX(0);
      }
    }
  }

  .md3-field__outline-panel-active {
    opacity: 0;
    transition: animation.standard(opacity, $_animation-duration);

    .md3-field--focused & {
      opacity: 1;
    }
  }
}
