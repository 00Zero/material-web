//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

@use 'sass:map';

@use '../../elevation/lib/elevation-theme';
@use '../../sass/map-ext';
@use '../../sass/resolvers';
@use '../../sass/theme';
@use '../../tokens';

$light-theme: tokens.md-comp-navigation-bar-values();
$dark-theme: tokens.md-comp-navigation-bar-values(
  (
    md-sys-color: tokens.md-sys-color-values-dark-non-dynamic(),
    md-sys-elevation: tokens.md-sys-elevation-values(),
  ),
  $exclude-hardcoded-values: true
);

@mixin theme($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme($light-theme, $theme);
  $theme: elevation-theme.resolve-theme(
    $theme,
    map.get($resolvers, elevation),
    $shadow-color-token: container-shadow-color,
    $elevation-tokens: (container-elevation)
  );
  $theme: theme.create-theme-vars($theme, 'navigation-bar');

  @include theme.emit-theme-vars($theme);
}

@mixin theme-styles($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme-styles(
    $light-theme,
    $theme,
    $require-all: false
  );
  $theme: elevation-theme.resolve-theme(
    $theme,
    map.get($resolvers, elevation),
    $shadow-color-token: container-shadow-color,
    $elevation-tokens: (container-elevation)
  );
  $theme: theme.create-theme-vars($theme, 'navigation-bar');

  & {
    @each $token, $value in $theme {
      --_#{$token}: #{$value};
    }
  }

  background-color: var(--_container-color);
  border-radius: var(--_container-shape);
  height: var(--_container-height);

  @include elevation-theme.theme-styles(
    (
      shadow: var(--_container-elevation-shadow),
      overlay-opacity: var(--_container-elevation-overlay-opacity),
      surface-tint-layer-color: var(--_container-surface-tint-layer-color),
    )
  );
}
