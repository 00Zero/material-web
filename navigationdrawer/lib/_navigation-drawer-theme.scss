//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// stylelint-disable selector-class-pattern --
// Selector '.md3-*' should only be used in this project.

@use 'sass:map';

@use '../../elevation/lib/elevation-theme';
@use '../../sass/resolvers';
@use '../../sass/shape';
@use '../../sass/theme';

$light-theme: (
  container-color: #fff,
  container-height: 100%,
  container-shape: 0 16px 16px 0,
  container-surface-tint-layer-color: null,
  container-width: 360px,
  // TODO(b/216384393): Temporary existing token to use for shadow color
  divider-color: #000,
  modal-container-elevation: 1,
  standard-container-elevation: 0,
);

@mixin theme($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme($light-theme, $theme);
  $theme: _resolve-theme($theme, $resolvers);

  $theme: theme.create-theme-vars($theme, 'navigation-drawer');

  @include theme.emit-theme-vars($theme);
}

@mixin theme-styles($theme: $light-theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme-styles(
    $light-theme,
    $theme,
    $require-all: false
  );
  $theme: _resolve-theme($theme, $resolvers);

  $theme: theme.create-theme-vars($theme, 'navigation-drawer');

  background-color: map.get($theme, container-color);
  border-start-start-radius: map.get($theme, container-shape-start-start);
  border-start-end-radius: map.get($theme, container-shape-start-end);
  border-end-end-radius: map.get($theme, container-shape-end-end);
  border-end-start-radius: map.get($theme, container-shape-end-start);
  height: map.get($theme, container-height);

  &.md3-navigation-drawer-modal--opened {
    inline-size: map.get($theme, container-width);
  }

  .md3-navigation-drawer-modal__slot-content {
    min-inline-size: map.get($theme, container-width);
    max-inline-size: map.get($theme, container-width);
  }

  @include elevation-theme.theme-styles(
    (
      shadow: map.get($theme, standard-container-elevation-shadow),
      overlay-opacity:
        map.get($theme, standard-container-elevation-overlay-opacity),
      surface-tint-layer-color:
        map.get($theme, container-surface-tint-layer-color),
    )
  );
}

@function _resolve-theme($theme, $resolvers) {
  $theme: elevation-theme.resolve-theme(
    $theme,
    map.get($resolvers, elevation),
    $shadow-color-token: divider-color,
    $elevation-tokens: (standard-container-elevation)
  );
  $theme: shape.resolve-theme(
    $theme,
    map.get($resolvers, shape),
    container-shape
  );

  @return $theme;
}
